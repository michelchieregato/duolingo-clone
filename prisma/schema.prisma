// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Courses {
  id     Int    @id @default(autoincrement())
  title  String
  imgSrc String

  userProgress UserProgress[]
  units        Unit[]
}

model UserProgress {
  id             String  @id
  userName       String
  userImgSrc     String?
  activeCourseId Int?
  hearts         Int     @default(5)
  points         Int     @default(5)

  activeCourse Courses? @relation(fields: [activeCourseId], references: [id], onDelete: Cascade)
}

model Unit {
  id          Int    @id
  title       String
  description String
  courseId    Int
  order       Int

  course Courses @relation(fields: [courseId], references: [id], onDelete: Cascade)

  lessons Lesson[]
}

model Lesson {
  id     Int    @id
  title  String
  unitId Int
  order  Int

  unit Unit @relation(fields: [unitId], references: [id], onDelete: Cascade)

  challenges Challenge[]
}

model Challenge {
  id       Int    @id
  lessonId Int
  type     String
  question String
  order    Int

  lesson Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade)

  options  ChallengeOptions[]
  progress ChallengeProgress[]
}

model ChallengeOptions {
  id          Int     @id
  challengeId Int
  text        String
  correct     Boolean @default(false)
  imgSrc      String?
  audioSrc    String?

  challenge Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)
}

model ChallengeProgress {
  id          Int     @id @default(autoincrement())
  userId      String
  challengeId Int
  completed   Boolean @default(false)

  challenge Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)
}
